# This workflow build and push Docker image to docker hub
# https://docs.docker.com/build/ci/github-actions/cache/
name: dockerhub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build locally to get version info
        id: build_info
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: false
          load: true
          tags: temp-image:latest
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Get versions
        id: get_version
        run: |
          PYTHON_VERSION=$(docker run --rm temp-image python3 --version | sed 's/Python //;s/\r//;s/^[ \t]*//;s/[ \t]*$//')
          ALPINE_VERSION=$(docker run --rm temp-image cat /etc/alpine-release)
          echo "python_version=${PYTHON_VERSION}" >> $GITHUB_OUTPUT
          echo "alpine_version=${ALPINE_VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version }}-${{ steps.get_version.outputs.alpine_version }}
          platforms: |-
            linux/amd64
            linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
