# This workflow build and push Docker image to docker hub
# https://docs.docker.com/build/ci/github-actions/cache/
name: dockerhub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build locally to get version info
        id: build_info
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: false
          load: true
          tags: temp-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get versions
        id: get_version
        run: |
          # Get Python version
          PYTHON_VERSION=$(docker run --rm temp-image -c "import sys; print(sys.version.split()[0])")
          
          # Get Alpine version
          ALPINE_VERSION=$(docker run --rm temp-image -c "import subprocess; print(subprocess.check_output(['cat', '/etc/alpine-release']).decode().strip())")
          
          # Extract two-digit versions
          PYTHON_VERSION_SHORT=$(echo $PYTHON_VERSION | sed -E 's/([0-9]+\.[0-9]+)\.[0-9]+/\1/')
          ALPINE_VERSION_SHORT=$(echo $ALPINE_VERSION | sed -E 's/([0-9]+\.[0-9]+)\.[0-9]+/\1/')
          
          # Output the values
          echo "python_version=${PYTHON_VERSION}" >> $GITHUB_OUTPUT
          echo "alpine_version=${ALPINE_VERSION}" >> $GITHUB_OUTPUT
          echo "python_version_short=${PYTHON_VERSION_SHORT}" >> $GITHUB_OUTPUT
          echo "alpine_version_short=${ALPINE_VERSION_SHORT}" >> $GITHUB_OUTPUT
      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version }}-${{ steps.get_version.outputs.alpine_version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version }}-${{ steps.get_version.outputs.alpine_version_short }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version_short }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/lean-python:${{ steps.get_version.outputs.python_version_short }}-${{ steps.get_version.outputs.alpine_version_short }}
          platforms: |-
            linux/amd64
            linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        if: github.event_name != 'pull_request'
        run: echo ${{ steps.build.outputs.digest }}
